# yaml-language-server: $schema=melos.yaml.schema.json
name: collaction_ui

sdkPath: .fvm/flutter_sdk # Comment out if not using fvm or replace with your custom flutter sdk

repository: https://github.com/CollActionteam/collaction_ui

packages:
  - packages/*

command:
  bootstrap:
    runPubGetInParallel: false
    usePubspecOverrides: true

scripts:
  analyze:
    exec: dart analyze .
    concurrency: 1
    fail-fast: true
    order-dependents: true
    description: |
        Run `flutter analyze` in all packages.
  
  format:
    exec: dart format --set-exit-if-changed .
    concurrency: 1
    fail-fast: true
    description: | 
      Run `dart format` in all packages.
    
  get:
    exec: flutter pub get
    concurrency: 1
    fail-fast: true
    order-dependents: true
    description: |
      Run `flutter pub get` in all packages.

  add:
    exec: flutter pub add $1
    description: |
      Run `flutter pub add` in package.
    packageFilters:
      flutter: true

  remove:
    exec: flutter pub remove $1
    description: |
      Run `flutter pub add` in package.
    packageFilters:
      flutter: true

  add:dev:
    exec: flutter pub add $1 --dev
    description: |
      Run `flutter pub add --dev` in package.
    packageFilters:
      flutter: true
     
  test: 
    exec: flutter test --coverage -r expanded --no-pub --test-randomize-ordering-seed random
    concurrency: 1
    fail-fast: true
    order-dependents: true
    packageFilters:
      dirExists: test
    description: |
      Run unit and widget tests in all packages.

  build:
    exec: flutter pub run build_runner build --delete-conflicting-outputs
    concurrency: 1
    fail-fast: true
    order-dependents: true
    packageFilters:
      dependsOn: build_runner
    description: |
      Run `build_runner` build command in all packages that has a dependency on `build_runner`.

  get:widgetbook:
      exec: flutter pub get
      fail-fast: true
      packageFilters:
        scope: "collaction_book"
      description: |
        Run flutter pub get in collaction_book

  build:widgetbook:
      exec: |
        flutter pub run build_runner build --delete-conflicting-outputs
        flutter build web -t lib/main.widgetbook.dart
      fail-fast: true
      packageFilters:
        dependsOn: build_runner
        scope: "collaction_book"
      description: |
        Run `build_runner` build command and flutter build web in collaction_book

  publish:widgetbook:
      exec: widgetbook publish --api-key $1
      concurrency: 1
      fail-fast: true
      packageFilters:
        scope: "collaction_book"
      description: |
        Publish collaction_book to Widgetbook Cloud
